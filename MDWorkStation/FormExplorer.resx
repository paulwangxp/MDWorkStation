<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACs
        DgAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABIAEAASABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABgAMAASADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wMAAf8BBwHwAfMC/xgA
        Af8CAAH/AfQB8wTyAfMB8gLxAfQB/1IAATEBWQIxAVEB7wG8AfMC/xQAAf8D7wGSAvEB8gHxAe8C7AHv
        AQcBEwH/BwABBwHsAeoBD0cAATEBUgRZAjEBUgHvAbwB8wL/EAAB/wG8Ae0BBwHqAusBbQEHARIC8gES
        AQcB6gH/AwAB7QH0AQcB+AGSAfgB7wEHAfFGAAFSATEIWQFYAjEB7wEHAfIC/wwAAv8B9QH0AW0D6wFt
        AQABEAEUAfEBBwETAf8FAAEOAW0B6wHsAfEB8gH0AesBFEQAAVIBeg1ZAjEB9wEHAfIB9AH/CAAB/wHv
        ARUBDwFtAvgB6wHsAQABSQERAfcBvAESAf8EAAIOAQAB9wHuAfMB9gFtAf8B8gESQwABWQF6EVkCMQH3
        AfAB/wYAAf8BCwJKAW0D+AEHAfMBAAEOAfcB8wESAf8BAAEHAfACAAEOARQBDwEUARMBFAH0AwAB+EIA
        AVkBegExE1kBWAH/BgAB/wELAq4B6wPsAfQBBwHyA/QB6gH/AgAB9wIAARABQwH0AesBFQETBAAB8EIA
        B3oPWQFYAXkGAAH/AUQB7QGuAfcB8wH0Av8B6gG8AvQB/wFtAf8CAAHuAQAB6goAAbxCAAx6ClkBWAF6
        BgAB/wFKAf8BuwGSAQcBvAb3AZIB7AH/AwABFQETAQ4JAAEPQgADegFSCnoIWQFYAXoBeQUAAf8BAAH1
        BAkBkgG7AQkB9wEZAesBCQH1Af8DAAHyAe8BEgEUBgABEQEPAexBAAH/A3oBUgSaB3oHWQFYAXoBeQUA
        AfQBAAEUAgkDGQHvAREBDwHqARACCQH0Av8DAAIRAQcD/wEVAQ4BAAFtQgAB9AF6A5oDoAWaBXoFWQFY
        AnoB/wQAAfMBCwEkAwkB3AG0ARUBFAIOAQ8CtAEQAREB6wHxAvQB/wH0ARUB7wEOAgABEUQAARoBegOa
        AVgBwwWgBZoDegNZAVgCegF5BAAB8QIAAdUEtAFDARQBAAEVAUMBFQG0AXMBHAHqAfgBbQFDAREBQwGS
        AfMB9AH/RgABmQF6A5oBUgXDBqAEmgJ6AXkDegQAAfABEAEOAbwBFAH3ARkCCQGuAesB9AH/AZkBmgWg
        AgcB6wFtAesBEgFDRgABWAF6AqACmgF6CMMGoAaaAXkDAAH/AgAB/wEVAQcB/wHyAeoBtAG7AvABWQJ6
        A6AB9wW1AbsB+EYAATEBegWgAlIBegnDA6ACmgKgAZoBegMABP8BAAL/AfIBEwPUBVkCegO1AawBzQGs
        AbUB6kYAATEBmgqgAlIBmgfDAaABGgLDAqABeQkAAfEBbQPUBVkBegF0A7UCzgGsAQcBEkYAATEBmgyg
        AXoIwwEaBMMBeQgAAf8B7gG0AdUC1AF6AVkBWAJ5AXQBHAK1Ae8BtQGtAbUB7AH0RgABMQ6gAVgBegL2
        BMMBGwXDCAAB/wFtAdsD1QEcAXkDdAIcAe0B7wG1A+8BE0cAATESoAFYAlIBMQF5BcMBeQcAAf8BQwHb
        A9UBswJ0BBwBeAHtA+8BBwEURwABMRWgAXoBBwIAARsDeQcAAfQBFQLbA9UBdAQcAngBWAF5Au0B9wFt
        RwABMRWgAXoBBwwAAf8B8QFDBNUB2wG0AhwDeAF5AVgBegFSAVkB6wH/RwABeQGaCqADmgegAXoBvAwA
        Af8B9wEOAWwBiwS0ARwDeAF5AlgBUwJZARVJAAFYCKABmgExAf8B9AF5AzEBWAN6AVgB8wwAAf8BFAFt
        AQ8BDgHwAe4BDwERAWYBUAFRAVcCWAFSAVMCWQFDSQABMQF6BqABmgExAf8KAAH/DQAB8wEOAUMBFQFt
        Ae8B9AERAUMC8AEVAm0BDwFLA1IB60oAAZkDMQFYAnoBMQH/GQAB8wETARABQwEVAQ4BAAEHAfAB6wHz
        ARIBQwHyAfABEQFDAe4BEwHrbgAB7gHsAfMB9AHzARUBDwEAAfAD/wHyAesBbQHzAfIB/3EAAe4BkgEV
        AbwB8wHyAQ4BAAHwBP92AAHzAfABFAEVAe4BGwEUAQAB8QH0eQAB8gH2AZIBFQFDAbwBFHwAAe4C9gHr
        fwAB/0kAAUIBTQE+BwABPgMAASgDAAGAAwABIAMAAQEBAAEBBgABAhYAA/8BAAHAA/8BYAEAAv8IAAHA
        AQ8C/wIAAf4BHwgAAcABAAL/AgAB4AEPCAABwAEAAQ8B/wIAAfgBAwgAAcACAAH/AgAB4AEBCAABwAIA
        AT8CAAGAAQ4IAAHAAgABPwIAAcABHggAAcACAAE/AgABwQH+CAABwAIAAT8CAAHhAf4IAAHAAgABHwIA
        AeEB+AgAAYACAAEfAgABOAEBCAABgAIAAQ8DAAEHCAABgAIAAQ8DAAEfCAABgAIAAQ8DAAEfCAABgAIA
        AQcBYAIAAR8IAAGAAgABBwEIAgABHwgAAYACAAEDAf4CAAEfCAABgAIAAQMB/AIAAR8IAAGAAgABAwH8
        AgABPwgAAYACAAEBAfwCAAE/CAABgAIAAWEB/AIAAT8IAAGAAgABfwH4AgABPwgAAYACAAF/AfgCAAF/
        CAABwAIAAX8B+AIAAX8IAAHAAQcB/gH/AfgCAAF/CAAB4AEPAv8B+AIAAX8IAAT/Af4CAAF/CAAF/wHA
        AQEB/wgABf8B+AEBAf8IAAb/AQEB/wgABv8B4QH/CAAG/wH9Af8IAAs=
</value>
  </data>
</root>